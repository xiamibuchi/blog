(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{395:function(t,e,a){"use strict";a.r(e);var s=a(9),v=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"指令"}},[t._v("指令")]),t._v(" "),a("h2",{attrs:{id:"v-bind-属性-class"}},[a("code",[t._v("v-bind:属性/class")])]),t._v(" "),a("p",[t._v("绑定标签")]),t._v(" "),a("p",[t._v("简写：")]),t._v(" "),a("p",[a("code",[t._v("v-bind:属性/class")]),t._v("=>"),a("code",[t._v(":属性/class")])]),t._v(" "),a("h3",{attrs:{id:"操作样式"}},[t._v("操作样式")]),t._v(" "),a("div",{staticClass:"language-HTML extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("fz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{ pink: true, green: true }"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("这是一段内容"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("bind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"{ color: activeColor, fontSize: fontSize + 'px' }\"")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("直接绑定到一个样式对象通常更好，这会让模板更清晰：")]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")])]),a("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("styleObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\ndata: { styleObject: { color: 'red', fontSize: '13px' } }\n")])])]),a("h3",{attrs:{id:"数组语法"}},[t._v("数组语法")]),t._v(" "),a("p",[a("code",[t._v("v-bind:style")]),t._v(" 的数组语法可以将多个样式对象应用到同一个元素上：")]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")])]),a("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("[baseStyles"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" overridingStyles]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h3",{attrs:{id:"自动添加前缀"}},[t._v("自动添加前缀")]),t._v(" "),a("p",[t._v("当 "),a("code",[t._v("v-bind:style")]),t._v(" 使用需要添加"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Vendor_Prefix",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器引擎前缀"),a("OutboundLink")],1),t._v("的 CSS 属性时，如 "),a("code",[t._v("transform")]),t._v("，Vue.js 会自动侦测并添加相应的前缀。")]),t._v(" "),a("h3",{attrs:{id:"多重值"}},[t._v("多重值")]),t._v(" "),a("blockquote",[a("p",[t._v("2.3.0+")])]),t._v(" "),a("p",[t._v("从 2.3.0 起你可以为 "),a("code",[t._v("style")]),t._v(" 绑定中的属性提供一个包含多个值的数组，常用于提供多个带前缀的值，例如：")]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ["),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-webkit-box'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-ms-flexbox'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex'")]),t._v("] "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("这样写只会渲染数组中最后一个被浏览器支持的值。在本例中，如果浏览器支持不带浏览器前缀的 flexbox，那么就只会渲染 "),a("code",[t._v("display: flex")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"v-model"}},[a("code",[t._v("v-model")])]),t._v(" "),a("p",[t._v("只能用在表单元素中，注意：不同的表达元素，v-model 的表现可能会有所不同。比如：v-model 操作文本框的 value 属性，而复选框 v-model 就是操作其选中状态了")]),t._v(" "),a("p",[t._v("v-model 可以实现数据的双向绑定，两个方向：")]),t._v(" "),a("ol",[a("li",[t._v("数据 -> 视图，数据的改变会影响页面 DOM 元素的内容改变")]),t._v(" "),a("li",[t._v("视图 -> 数据，DOM 元素内容的改变也会引起数据的变化")])]),t._v(" "),a("p",[t._v("注：Vue 使用"),a("code",[t._v("Object.defineProperty()")]),t._v("进行数据的双向绑定")]),t._v(" "),a("h2",{attrs:{id:"v-on-事件"}},[a("code",[t._v("v-on:事件")])]),t._v(" "),a("p",[t._v("简写：")]),t._v(" "),a("p",[a("code",[t._v("v-on:methods")]),t._v("=>"),a("code",[t._v("@methods")])]),t._v(" "),a("h3",{attrs:{id:"事件修饰符"}},[t._v("事件修饰符")]),t._v(" "),a("p",[t._v("给子元素的事件添加事件修饰符：")]),t._v(" "),a("p",[a("code",[t._v('v-on:事件.stop="事件"')]),t._v("=>"),a("code",[t._v('@事件.stop="事件')])]),t._v(" "),a("ul",[a("li",[t._v("stop:阻止冒泡。相当于调用了 event.stopPropagation()")]),t._v(" "),a("li",[t._v("self:事件只有自身触发（和冒泡无关）")]),t._v(" "),a("li",[t._v("capture:使用事件捕获。事件触发从包含这个元素的顶层开始往下触发。")]),t._v(" "),a("li",[t._v("once:事件只触发一次")]),t._v(" "),a("li",[t._v("prevent:阻止默认行为。相当于调用了 event.preventDefault()")]),t._v(" "),a("li",[t._v("once: 事件只会触发一次")]),t._v(" "),a("li",[t._v("passive: 表示 listener 永远不会调用 preventDefault()。如果 listener 仍然调用了这个函数，客户端将会忽略它并抛出一个控制台警告")]),t._v(" "),a("li",[t._v("native 把一个 vue 组件转化为一个普通的 HTML 标签。注意：使用.native 修饰符来操作普通 HTML 标签是会令事件失效的")])]),t._v(" "),a("h3",{attrs:{id:"按键修饰符"}},[t._v("按键修饰符")]),t._v(" "),a("p",[t._v("给子元素的事件添加事件修饰符：")]),t._v(" "),a("p",[a("code",[t._v("v-on:keyup.13")]),t._v("=>"),a("code",[t._v("@keyup.13")]),t._v(" // 只有在 keyCode 是 13 时调用后面绑定的事件")]),t._v(" "),a("p",[t._v("全部的按键别名：记住所有的 keyCode 比较困难，所以 Vue 为最常用的按键提供了别名：")]),t._v(" "),a("ul",[a("li",[t._v("keyCode 按下键盘")]),t._v(" "),a("li",[t._v("enter")]),t._v(" "),a("li",[t._v("tab")]),t._v(" "),a("li",[t._v("delete (捕获 “删除” 和 “退格” 键)")]),t._v(" "),a("li",[t._v("esc")]),t._v(" "),a("li",[t._v("space")]),t._v(" "),a("li",[t._v("up")]),t._v(" "),a("li",[t._v("down")]),t._v(" "),a("li",[t._v("left")]),t._v(" "),a("li",[t._v("right")]),t._v(" "),a("li",[t._v("exact 限制系统修饰键（不能按下系统修饰键+按键来出发）")])]),t._v(" "),a("p",[t._v("可以通过全局 config.keyCodes 对象自定义按键修饰符别名：")]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[t._v("// 可以使用 `v-on:keyup.f1` Vue.config.keyCodes.f1 = 112\n")])])]),a("h3",{attrs:{id:"系统修饰键"}},[t._v("系统修饰键")]),t._v(" "),a("ul",[a("li",[t._v("ctrl")]),t._v(" "),a("li",[t._v("alt")]),t._v(" "),a("li",[t._v("shift")]),t._v(" "),a("li",[t._v("meta")])]),t._v(" "),a("h3",{attrs:{id:"表单修饰符"}},[t._v("表单修饰符")]),t._v(" "),a("ul",[a("li",[t._v("lazy 输入完所有东西，光标离开才更新视图")]),t._v(" "),a("li",[t._v("trim 过滤首尾的空格")]),t._v(" "),a("li",[t._v("number 先输入数字，那它就会限制你输入的只能是数字。如果你先输入字符串，那它就相当于没有加.number")])]),t._v(" "),a("h3",{attrs:{id:"鼠标按钮修饰符"}},[t._v("鼠标按钮修饰符")]),t._v(" "),a("ul",[a("li",[t._v("left")]),t._v(" "),a("li",[t._v("right")]),t._v(" "),a("li",[t._v("middle")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意：在 Mac 系统键盘上，meta 对应 command 键 (⌘)。在 Windows 系统键盘 meta 对应 Windows 徽标键 (⊞)。在 Sun 操作系统键盘上，meta 对应实心宝石键 (◆)。在其他特定键盘上，尤其在 MIT 和 Lisp 机器的键盘、以及其后继产品，比如 Knight 键盘、space-cadet 键盘，meta 被标记为“META”。在 Symbolics 键盘上，meta 被标记为“META”或者“Meta”。")])]),t._v(" "),a("h3",{attrs:{id:"v-bind-修饰符"}},[t._v("v-bind 修饰符")]),t._v(" "),a("ul",[a("li",[t._v(".sync(2.3.0+ 新增)")])]),t._v(" "),a("p",[t._v("在有些情况下，我们可能需要对一个 prop 进行“双向绑定”。不幸的是，真正的双向绑定会带来维护上的问题，因为子组件可以修改父组件，且在父组件和子组件都没有明显的改动来源。我们通常的做法是")]),t._v(" "),a("p",[t._v('//父亲组件\n<comp :myMessage="bar" @update:myMessage="func">'),t._v("\n//js\nfunc(e){\nthis.bar = e;\n}\n//子组件 js\nfunc2(){\nthis.$emit('update:myMessage',params);\n}\n现在这个.sync 修饰符就是简化了上面的步骤")]),t._v(" "),a("p",[t._v("//父组件\n"),a("comp",{attrs:{myMessage:t.bar},on:{"update:myMessage":function(e){t.bar=e},"update:my-message":function(e){t.bar=e}}}),t._v("\n//子组件\nthis.$emit('update:myMessage',params);\n这样确实会方便很多，但是也有很多需要注意的点")],1),t._v(" "),a("p",[t._v("使用 sync 的时候，子组件传递的事件名必须为 update:value，其中 value 必须与子组件中 props 中声明的名称完全一致(如上例中的 myMessage，不能使用 my-message)\n注意带有 .sync 修饰符的 v-bind 不能和表达式一起使用 (例如 v-bind:title.sync=”doc.title + ‘!’” 是无效的)。取而代之的是，你只能提供你想要绑定的属性名，类似 v-model。\n将 v-bind.sync 用在一个字面量的对象上，例如 v-bind.sync=”{ title: doc.title }”，是无法正常工作的，因为在解析一个像这样的复杂表达式的时候，有很多边缘情况需要考虑。")]),t._v(" "),a("ul",[a("li",[t._v("prop")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Property：节点对象在内存中存储的属性，可以访问和设置。\nAttribute：节点对象的其中一个属性( property )，值是一个对象。\n可以通过点访问法 document.getElementById('xx').attributes 或者 document.getElementById('xx').getAttributes('xx') 读取，通过 document.getElementById('xx').setAttribute('xx',value) 新增和修改。\n在标签里定义的所有属性包括 HTML 属性和自定义属性都会在 attributes 对象里以键值对的方式存在。\n")])])]),a("p",[t._v("其实attribute和property两个单词，翻译出来都是属性，但是《javascript高级程序设计》将它们翻译为特性和属性，以示区分")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('//这里的id,value,style都属于property\n//index属于attribute\n//id、title等既是属性，也是特性。修改属性，其对应的特性会发生改变；修改特性，属性也会改变\n<input id="uid" title="title1" value="1" :index="index">\n//input.index === undefined\n//input.attributes.index === this.index\n')])])]),a("p",[t._v("从上面我们可以看到如果直接使用v-bind绑定，则默认会绑定到dom节点的attribute。为了")]),t._v(" "),a("p",[t._v("通过自定义属性存储变量，避免暴露数据\n防止污染 HTML 结构\n我们可以使用这个修饰符，如下")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<input id="uid" title="title1" value="1" :index.prop="index">\n//input.index === this.index\n//input.attributes.index === undefined\n')])])]),a("ul",[a("li",[t._v("camel 如果我们使用.camel修饰符，那属性名就会被渲染为小驼峰名")])]),t._v(" "),a("h2",{attrs:{id:"v-text"}},[a("code",[t._v("v-text")])]),t._v(" "),a("p",[t._v("设置当前元素的文本内容，会覆盖掉元素中的默认内容(相当于 innerText 或 textContent)")]),t._v(" "),a("h2",{attrs:{id:"v-html"}},[a("code",[t._v("v-html")])]),t._v(" "),a("p",[t._v("设置当前元素的内容，会覆盖掉元素中的默认内容(相当于 innerHTML)")]),t._v(" "),a("p",[t._v("会忽略解析属性值中的数据绑定")]),t._v(" "),a("p",[t._v("为防止 XSS 攻击，不能使用 v-html 展示用户输入的内容")]),t._v(" "),a("h2",{attrs:{id:"v-for"}},[a("code",[t._v("v-for")])]),t._v(" "),a("p",[t._v("可循环数组或对象")]),t._v(" "),a("p",[t._v("最好为循环的对象加上 key，可节约性能。在有 key 的情况下，进行队列的修改只会对修改的那一项进行操作，其余项会会进行复用。如无 key，则会在操作的那一项之后重新创建元素，造成性能浪费。")]),t._v(" "),a("div",{staticClass:"language-JavaScript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"item in list"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"item.id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(value, index) in list"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"item.id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(val, key, index) in obj"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("span v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"val in 8"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" val "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("span"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h2",{attrs:{id:"v-if-和-v-else-和-v-else-if"}},[a("code",[t._v("v-if")]),t._v(" 和 "),a("code",[t._v("v-else")]),t._v(" 和 "),a("code",[t._v("v-else-if")])]),t._v(" "),a("p",[t._v("控制元素的展示和隐藏（如隐藏，DOM 中找不到）")]),t._v(" "),a("p",[t._v("v-if 与 v-else 是一个组合，中间不允许出现其他元素")]),t._v(" "),a("h2",{attrs:{id:"v-show"}},[a("code",[t._v("v-show")])]),t._v(" "),a("p",[t._v("控制元素的展示和隐藏（通过 display:none 控制）")]),t._v(" "),a("p",[t._v("频繁的展示和隐藏使用 v-show，避免频繁的删除和创建 DOM 元性能消耗大。")]),t._v(" "),a("h2",{attrs:{id:"v-pre"}},[a("code",[t._v("v-pre")])]),t._v(" "),a("p",[t._v("展示纯文字信息，让 Vue 不解析大段纯文本信息，提高性能。")]),t._v(" "),a("h2",{attrs:{id:"v-once"}},[a("code",[t._v("v-once")])]),t._v(" "),a("p",[t._v("只渲染元素一次，如果之后数据发生变化，元素不会随之变化。")]),t._v(" "),a("h2",{attrs:{id:"v-cloak"}},[a("code",[t._v("v-cloak")])]),t._v(" "),a("p",[t._v("配合[v-cloak] {display: none}; 来使用。")]),t._v(" "),a("p",[t._v("元素编译结束才会出现，元素编译完，Vue 会将 v-cloak 指令从页面中移除。")]),t._v(" "),a("h2",{attrs:{id:"directive-自定义指令"}},[t._v("directive 自定义指令")]),t._v(" "),a("p",[t._v("Vue.directive( id, [definition] )")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("参数：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("{string} id")])]),t._v(" "),a("li",[a("code",[t._v("{Function | Object} [definition]")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("用法")]),t._v("：")]),t._v(" "),a("p",[t._v("注册或获取全局指令。")]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[t._v("// 注册 Vue.directive('my-directive', { bind: function () {}, inserted:\nfunction () {}, update: function () {}, componentUpdated: function () {},\nunbind: function () {} }) // 注册 (指令函数) Vue.directive('my-directive',\nfunction () { // 这里将会被 `bind` 和 `update` 调用 }) //\ngetter，返回已注册的指令 var myDirective = Vue.directive('my-directive')\n")])])])])]),t._v(" "),a("p",[t._v("有操作 DOM 元素的需求时需要使用")]),t._v(" "),a("p",[t._v("除了核心功能默认内置的指令 ("),a("code",[t._v("v-model")]),t._v(" 和 "),a("code",[t._v("v-show")]),t._v(")，Vue 也允许注册自定义指令。注意，在 Vue2.0 中，代码复用和抽象的主要形式是组件。然而，有的情况下，你仍然需要对普通 DOM 元素进行底层操作，这时候就会用到自定义指令。举个聚焦输入框的例子，如下：")]),t._v(" "),a("p",[t._v("当页面加载时，该元素将获得焦点 (注意："),a("code",[t._v("autofocus")]),t._v(" 在移动版 Safari 上不工作)。事实上，只要你在打开这个页面后还没点击过任何内容，这个输入框就应当还是处于聚焦状态。现在让我们用指令来实现这个功能：")]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[t._v("// 注册一个全局自定义指令 `v-focus` Vue.directive('focus', { //\n当被绑定的元素插入到 DOM 中时…… inserted: function (el) { // 聚焦元素 el.focus()\n} })\n")])])]),a("p",[t._v("如果想注册局部指令，组件中也接受一个 "),a("code",[t._v("directives")]),t._v(" 的选项：")]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[t._v("directives: { focus: { // 指令的定义 inserted: function (el) { el.focus() } } }\n")])])]),a("p",[t._v("然后你可以在模板中任何元素上使用新的 "),a("code",[t._v("v-focus")]),t._v(" 属性，如下：")]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-focus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"钩子函数"}},[t._v("钩子函数")]),t._v(" "),a("p",[t._v("一个指令定义对象可以提供如下几个钩子函数 (均为可选)：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("bind")]),t._v("：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。")]),t._v(" "),a("li",[a("code",[t._v("inserted")]),t._v("：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。")]),t._v(" "),a("li",[a("code",[t._v("update")]),t._v("：所在组件的 VNode 更新时调用，"),a("strong",[t._v("但是可能发生在其子 VNode 更新之前")]),t._v("。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新 (详细的钩子函数参数见下)。")]),t._v(" "),a("li",[a("code",[t._v("componentUpdated")]),t._v("：指令所在组件的 VNode "),a("strong",[t._v("及其子 VNode")]),t._v(" 全部更新后调用。")]),t._v(" "),a("li",[a("code",[t._v("unbind")]),t._v("：只调用一次，指令与元素解绑时调用。")])]),t._v(" "),a("p",[t._v("接下来我们来看一下钩子函数的参数 (即 "),a("code",[t._v("el")]),t._v("、"),a("code",[t._v("binding")]),t._v("、"),a("code",[t._v("vnode")]),t._v(" 和 "),a("code",[t._v("oldVnode")]),t._v(")。")]),t._v(" "),a("h3",{attrs:{id:"钩子函数参数"}},[t._v("钩子函数参数")]),t._v(" "),a("p",[t._v("指令钩子函数会被传入以下参数：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("el")]),t._v("：指令所绑定的元素，可以用来直接操作 DOM 。")]),t._v(" "),a("li",[a("code",[t._v("binding")]),t._v("：一个对象，包含以下属性：\n"),a("ul",[a("li",[a("code",[t._v("name")]),t._v("：指令名，不包括 "),a("code",[t._v("v-")]),t._v(" 前缀。")]),t._v(" "),a("li",[a("code",[t._v("value")]),t._v("：指令的绑定值，例如："),a("code",[t._v('v-my-directive="1 + 1"')]),t._v(" 中，绑定值为 "),a("code",[t._v("2")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("oldValue")]),t._v("：指令绑定的前一个值，仅在 "),a("code",[t._v("update")]),t._v(" 和 "),a("code",[t._v("componentUpdated")]),t._v(" 钩子中可用。无论值是否改变都可用。")]),t._v(" "),a("li",[a("code",[t._v("expression")]),t._v("：字符串形式的指令表达式。例如 "),a("code",[t._v('v-my-directive="1 + 1"')]),t._v(" 中，表达式为 "),a("code",[t._v('"1 + 1"')]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("arg")]),t._v("：传给指令的参数，可选。例如 "),a("code",[t._v("v-my-directive:foo")]),t._v(" 中，参数为 "),a("code",[t._v('"foo"')]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("modifiers")]),t._v("：一个包含修饰符的对象。例如："),a("code",[t._v("v-my-directive.foo.bar")]),t._v(" 中，修饰符对象为 "),a("code",[t._v("{ foo: true, bar: true }")]),t._v("。")])])]),t._v(" "),a("li",[a("code",[t._v("vnode")]),t._v("：Vue 编译生成的虚拟节点。移步 "),a("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#VNode-%E6%8E%A5%E5%8F%A3",target:"_blank",rel:"noopener noreferrer"}},[t._v("VNode API"),a("OutboundLink")],1),t._v(" 来了解更多详情。")]),t._v(" "),a("li",[a("code",[t._v("oldVnode")]),t._v("：上一个虚拟节点，仅在 "),a("code",[t._v("update")]),t._v(" 和 "),a("code",[t._v("componentUpdated")]),t._v(" 钩子中可用。")])])])}),[],!1,null,null,null);e.default=v.exports}}]);