(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{384:function(t,a,n){"use strict";n.r(a);var e=n(9),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"览器对象模型"}},[t._v("览器对象模型")]),t._v(" "),n("p",[t._v("浏览器对象模型(Browser Object Model)，简称 BOM。BOM 提供了独立于内容而与浏览器窗口进行交互的对象。")]),t._v(" "),n("h2",{attrs:{id:"window-对象"}},[t._v("window 对象")]),t._v(" "),n("p",[t._v("BOM 的核心对象是 window，它代表浏览器的一个实例。window 对象既是通过 JavaScript 访问浏览器窗口的接口，也是 ECMAScript 规定的 Global 对象。所以网页中的所有对象、变量、函数都是以 window 作为其 Global 对象，所以，JavaScript 中的任何一个全局函数或变量都是 window 的属性")]),t._v(" "),n("h3",{attrs:{id:"主要属性"}},[t._v("主要属性")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("document 对象代表浏览器中页面")])]),t._v(" "),n("li",[n("p",[t._v("history 对象包含用户所访问过的页面的历史信息")])]),t._v(" "),n("li",[n("p",[t._v("navigator 对象包含浏览器自身相关信息")])]),t._v(" "),n("li",[n("p",[t._v("screen 对象包含了客户端计算机显示器显示能力的信息")])]),t._v(" "),n("li",[n("p",[t._v("location 对象包含了浏览器所加载的当前页面的 URL 的详细信息")])]),t._v(" "),n("li",[n("p",[t._v("console：控制台对象")])]),t._v(" "),n("li",[n("p",[t._v("window.document：指向当前窗口内的文档节点")])]),t._v(" "),n("li",[n("p",[t._v("window.length：返回在当前窗口中 frames 的数量（包括 IFRAMES，只读）")])]),t._v(" "),n("li",[n("p",[t._v("window.name：当前窗口的名称")]),t._v(" "),n("ul",[n("li",[t._v("window.parent.name 父 window 的名称")]),t._v(" "),n("li",[t._v("widnow.top.name 顶层 window 的名称")])])]),t._v(" "),n("li",[n("p",[t._v("window.opener：返回打开当前窗口的那个窗口的引用")])]),t._v(" "),n("li",[n("p",[t._v("window.parent：返回当前窗口的父窗口对象。如果一个窗口没有父窗口,则它的 parent 属性为自身的引用")])]),t._v(" "),n("li",[n("p",[t._v("window.self：指向当前 window 对象的引用")])]),t._v(" "),n("li",[n("p",[t._v("window.top：窗口体系中的最顶层窗口的引用")])]),t._v(" "),n("li",[n("p",[t._v("window.window：窗口自身")])])]),t._v(" "),n("h3",{attrs:{id:"base64"}},[t._v("base64")]),t._v(" "),n("p",[t._v("从IE10+浏览器开始，所有浏览器就原生提供了Base64编码解码方法")]),t._v(" "),n("div",{staticClass:"language-JavaScript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解码")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" decodedData "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("atob")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("encodedData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编码")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" encodedData "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("btoa")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decodedData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("注意：window.btoa 方法仅支持 Latin1 编码，不支持中文，需要先用encodeURIComponent转码")])]),t._v(" "),n("h3",{attrs:{id:"窗口位置"}},[t._v("窗口位置")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("window.outerHeight：获取整个浏览器外窗口的高度（px，只读）")])]),t._v(" "),n("li",[n("p",[t._v("window.innerHeight：获取整个浏览器内窗口的高度（px，只读）")])]),t._v(" "),n("li",[n("p",[t._v("window.outerWidth：获取整个浏览器外窗口的宽度（px，只读）")])]),t._v(" "),n("li",[n("p",[t._v("window.scrollX（pageXOffset）：返回文档/页面水平方向滚动的像素值（只读）")])]),t._v(" "),n("li",[n("p",[t._v("window.scrollY（pageYOffset）：返回文档在垂直方向已滚动的像素值（只读）")])]),t._v(" "),n("li",[n("p",[t._v("window.screenX：浏览器左边界到操作系统桌面左边界的水平距离（只读）")])]),t._v(" "),n("li",[n("p",[t._v("window.screenY：浏览器顶部距离系统桌面顶部的垂直距离（只读）")])]),t._v(" "),n("li",[n("p",[t._v("resizeBy()：相对窗体当前的大小，宽度调整 w 个像素，高度调整 h 个像素。如果参数为负值，将缩小窗体")])]),t._v(" "),n("li",[n("p",[t._v("resizeTo()：把窗体宽度调整为 w 个像素，高度调整为 h 个像素")])]),t._v(" "),n("li",[n("p",[t._v("moveTo(x, y) ：将当前窗口移动到指定的坐标位置")])]),t._v(" "),n("li",[n("p",[t._v("moveBy(deltaX, deltaY)：根据指定的值，移动当前窗口")])])]),t._v(" "),n("h3",{attrs:{id:"主要方法"}},[t._v("主要方法")]),t._v(" "),n("ul",[n("li",[t._v("window.onload()：事件会在页面和图像加载完成后执行，所以如果要获取图片的宽高，必须需要用 onload（一个页面只能有一个 onload 事件，后面的会覆盖前面的）")]),t._v(" "),n("li",[t._v("window.open(URL,name,specs,replace)：打开一个新的浏览器窗口或查找一个已命名的窗口（返回打开的窗口，用于关闭，失败会返回 null）\n"),n("ul",[n("li",[t._v("URL：可选。打开指定的页面的 URL。如果没有指定 URL 打开新的空白窗口")]),t._v(" "),n("li",[t._v("name：可选。指定 target 属性或窗口的名称\n"),n("ul",[n("li",[n("code",[t._v("_blank")]),t._v("：URL 加载到一个新的窗口（默认）")]),t._v(" "),n("li",[n("code",[t._v("_self")]),t._v("：URL 替换当前页面")]),t._v(" "),n("li",[n("code",[t._v("name")]),t._v(" - 窗口名称")])])]),t._v(" "),n("li",[t._v("specs：打开窗口的属性\n"),n("ul",[n("li",[t._v("height：窗口的高度（px）。最小值为 100px")]),t._v(" "),n("li",[t._v("width=pixels：窗口的宽度（px）。最小值为 100")]),t._v(" "),n("li",[t._v("left：该窗口的左侧位置（px）")]),t._v(" "),n("li",[t._v("location=yes|no|1|0：是否显示地址字段.默认值是 yes")]),t._v(" "),n("li",[t._v("menubar=yes|no|1|0：是否显示菜单栏.默认值是 yes")]),t._v(" "),n("li",[t._v("resizable=yes|no|1|0：是否可调整窗口大小.默认值是 yes")]),t._v(" "),n("li",[t._v("scrollbars=yes|no|1|0：是否显示滚动条.默认值是 yes")]),t._v(" "),n("li",[t._v("status=yes|no|1|0：是否要添加一个状态栏.默认值是 yes")])])]),t._v(" "),n("li",[t._v("replace：规定了装载到窗口的 URL 是在窗口的浏览历史中创建一个新条目，还是替换浏览历史中的当前条目\n"),n("ul",[n("li",[t._v("true：URL 替换浏览历史中的当前条目。")]),t._v(" "),n("li",[t._v("false：URL 在浏览历史中创建新的条目。")])])])])]),t._v(" "),n("li",[t._v("window.alert():显示一个警告对话框")]),t._v(" "),n("li",[t._v("focus()：使窗体或控件获取焦点")]),t._v(" "),n("li",[t._v("blur()：将焦点移出顶层窗口")]),t._v(" "),n("li",[t._v("close()：关闭当前窗口或某个指定的窗口")])]),t._v(" "),n("h3",{attrs:{id:"事件"}},[t._v("事件")]),t._v(" "),n("ul",[n("li",[t._v("beforeunload：监听浏览器关闭或刷新事件")]),t._v(" "),n("li",[t._v("load：：监听浏览器加载")])]),t._v(" "),n("h3",{attrs:{id:"定时器"}},[t._v("定时器")]),t._v(" "),n("ul",[n("li",[t._v("setTimeout(fn,time); // return timer")])]),t._v(" "),n("p",[t._v("clearTime(timer) / /清除定时器")]),t._v(" "),n("ul",[n("li",[t._v("setInterval(fn,time); // return timer 一般一秒钟分成 25 份就有动画效果，分成 60 份人眼就无法识别")])]),t._v(" "),n("p",[t._v("clearTime(timer) // 清除定时器")]),t._v(" "),n("p",[t._v("clearIntervel(timer) // 清除定时器")]),t._v(" "),n("p",[t._v("开启定时器会返回一个 Number 类型的 id（由浏览器决定，一般顺序为 0, 1, 2...）")]),t._v(" "),n("p",[t._v("开启定时器前最好先清除定时器。（每次开启定时器返回的值是不一样的。）")]),t._v(" "),n("blockquote",[n("p",[t._v("注意：定时器不影响代码执行。开启定时器是异步操作，会进入事件队列，只有主线程执行完，浏览器才会查找事件队列内的事件。")])]),t._v(" "),n("h3",{attrs:{id:"对话框"}},[t._v("对话框")]),t._v(" "),n("ul",[n("li",[t._v("alert()")]),t._v(" "),n("li",[t._v("prompt()")]),t._v(" "),n("li",[t._v("confirm()")])]),t._v(" "),n("h2",{attrs:{id:"history-对象"}},[t._v("History 对象")]),t._v(" "),n("p",[t._v("History 对象提供了操作浏览器会话历史（浏览器地址栏中访问的页面，以及当前页面中通过框架加载的页面）的接口。")]),t._v(" "),n("ul",[n("li",[t._v("length：描述当前的历史记录中的个数")]),t._v(" "),n("li",[t._v("back()：向前一个历史记录，类似后退")]),t._v(" "),n("li",[t._v("forword()：向后一个历史记录，类似前进")]),t._v(" "),n("li",[t._v("go(num)：根据参数设置向前或者向后")])]),t._v(" "),n("p",[t._v("这个对象属于历史遗留对象，对于现代 Web 页面来说，由于大量使用 AJAX 和页面交互，简单粗暴地调用 history.back()可能会让用户感到非常愤怒。"),n("em",[t._v("任何情况，你都不应该使用 history 这个对象了。")])]),t._v(" "),n("h2",{attrs:{id:"location-对象"}},[t._v("Location 对象")]),t._v(" "),n("p",[t._v("有关文档当前地址的信息")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("hash 设置或返回从井号 (#) 开始的 URL（锚）")])]),t._v(" "),n("li",[n("p",[t._v("host 设置或返回主机名和当前 URL 的端口号")])]),t._v(" "),n("li",[n("p",[t._v("hostname 设置或返回当前 URL 的主机名")])]),t._v(" "),n("li",[n("p",[t._v("href 设置或返回完整的 URL")])]),t._v(" "),n("li",[n("p",[t._v("pathname 设置或返回当前 URL 的路径部分")])]),t._v(" "),n("li",[n("p",[t._v("port 设置或返回当前 URL 的端口号")])]),t._v(" "),n("li",[n("p",[t._v("protocol 设置或返回当前 URL 的协议")])]),t._v(" "),n("li",[n("p",[t._v("search 设置或返回从问号 (?) 开始的 URL（查询部分）")])]),t._v(" "),n("li",[n("p",[t._v('assign("url")：加载新的文档,这与直接将一个 URL 赋值给 Location 对象的 href 属性效果是一样的')])]),t._v(" "),n("li",[n("p",[t._v("reload()：重新加载当前文档，如果该方法没有规定参数，或者参数是 false，它就会用 HTTP 头 If-Modified-Since 来检测服务器上的文档是否已改变。如果文档已改变，reload() 会再次下载该文档。如果文档未改变，则该方法将从缓存中装载文档。这与用户单击浏览器的刷新按钮的效果是完全一样的。如果把该方法的参数设置为 true，那么无论文档的最后修改日期是什么，它都会绕过缓存，从服务器上重新下载该文档。这与用户在单击浏览器的刷新按钮时按住 Shift 健的效果是完全一样")])]),t._v(" "),n("li",[n("p",[t._v('replace("url")：用新的 URL 替换当前的 URL.')])])]),t._v(" "),n("h2",{attrs:{id:"navigator-对象"}},[t._v("navigator 对象")]),t._v(" "),n("p",[t._v("表示浏览器的信息")]),t._v(" "),n("p",[t._v("常用于区分不同浏览器。")]),t._v(" "),n("p",[t._v("可由 navigator 对象了解浏览器的种类，版本号，用户计算机的操作系统。常用于确保将用户导向与其使用的浏览器相兼容的页面上。")]),t._v(" "),n("p",[t._v("注：navigator 的信息可以很容易地被用户修改，所以 JavaScript 读取的值不一定是正确的。")]),t._v(" "),n("ul",[n("li",[t._v("appCodeName 返回浏览器的代码名")]),t._v(" "),n("li",[t._v("appName 返回浏览器的名称")]),t._v(" "),n("li",[t._v("appVersion 返回浏览器的平台和版本信息")]),t._v(" "),n("li",[t._v("browserLanguage 返回当前浏览器的语言")]),t._v(" "),n("li",[t._v("cookieEnabled 返回指明浏览器中是否启用 cookie 的布尔值")]),t._v(" "),n("li",[t._v("cpuClass 返回浏览器系统的 CPU 等级")]),t._v(" "),n("li",[t._v("onLine 返回指明系统是否处于脱机模式的布尔值")]),t._v(" "),n("li",[t._v("platform 返回运行浏览器的操作系统平台")]),t._v(" "),n("li",[t._v("systemLanguage 返回 OS 使用的默认语言")]),t._v(" "),n("li",[t._v("userAgent 返回由客户机发送服务器的 user-agent 头部的值（浏览器版本）")]),t._v(" "),n("li",[t._v("userLanguage 返回 OS 的自然语言设置")]),t._v(" "),n("li",[t._v("onLine 返回 bool，是否联网（局域网属于联网）")])]),t._v(" "),n("h3",{attrs:{id:"geolocation-获取设备当前位置"}},[t._v("geolocation 获取设备当前位置")]),t._v(" "),n("blockquote",[n("p",[t._v("在某些浏览器上只有 HTTPS 可以获取")])]),t._v(" "),n("p",[t._v("提供设备位置信息，设备用户会被询问是否提供位置信息。")]),t._v(" "),n("div",{staticClass:"language-JavaScript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"geolocation"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" navigator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* geolocation is available */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* geolocation IS NOT available */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//  Firefox 24及之前的版本 "geolocation" in navigator 都会返回 true')]),t._v("\n")])])]),n("p",[t._v("获取定位 getCurrentPosition")]),t._v(" "),n("div",{staticClass:"language-JavaScript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("navigator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("geolocation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurrentPosition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("success"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// success：成功回调")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error：失败回调")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// options Optional：附加选项")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  maximumAge: integer (milliseconds]) | infinity - maximum cached position age.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  timeout: integer (milliseconds]) - amount of time before the error callback is invoked, if 0 it will never invoke.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   enableHighAccuracy: false | true")]),t._v("\n")])])]),n("p",[t._v("定期轮询设备的位置 watchPosition")]),t._v(" "),n("div",{staticClass:"language-JavaScript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("navigator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("geolocation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("watchPosition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("success"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// success(location)：成功回调")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// location.coords.longitude; // 经度")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// location.coords.latitude; // 纬度")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// location.coords.accuracy; // 精准度")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// location.coords.altitude; // 海拔")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error：失败回调")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// options Optional：附加选项")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// maximumAge: integer (milliseconds]) | infinity - maximum cached position age.")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// timeout: integer (milliseconds]) - amount of time before the error callback is invoked, if 0 it will never invoke.")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// enableHighAccuracy: false | true")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return watchID：userd for clearWatch")]),t._v("\n")])])]),n("p",[t._v("停止 watchPosition 的定期轮询")]),t._v(" "),n("div",{staticClass:"language-JavaScript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("navigator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("geolocation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("watchPosition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("watchID：userd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"screen-对象"}},[t._v("screen 对象")]),t._v(" "),n("p",[t._v("表示屏幕的信息")]),t._v(" "),n("ul",[n("li",[t._v("screen.width：屏幕宽度，以像素为单位；")]),t._v(" "),n("li",[t._v("screen.height：屏幕高度，以像素为单位；")]),t._v(" "),n("li",[t._v("screen.colorDepth：返回颜色位数，如 8、16、24。")])]),t._v(" "),n("h2",{attrs:{id:"document-对象"}},[t._v("document 对象")]),t._v(" "),n("p",[t._v("由于 HTML 在浏览器中以 DOM 形式表示为树形结构，document 对象就是整个 DOM 树的根节点")]),t._v(" "),n("ul",[n("li",[t._v("getElementById()：根据 id 获得 DOM 节点")]),t._v(" "),n("li",[t._v("getElementsByTagName()：和按 Tag 名称获得一组 DOM 节点。")]),t._v(" "),n("li",[t._v("cookie 属性：获取当前页面的 Cookie。Cookie 是由服务器发送的 key-value 标示符。因为 HTTP 协议是无状态的，但是服务器要区分到底是哪个用户发过来的请求，就可以用 Cookie 来区分。当一个用户成功登录后，服务器发送一个 Cookie 给浏览器，例如 user=ABC123XYZ(加密的字符串)...，此后，浏览器访问该网站时，会在请求头附上这个 Cookie，服务器根据 Cookie 即可区分出用户。Cookie 还可以存储网站的一些设置，例如，页面显示的语言等等。")])]),t._v(" "),n("p",[t._v("JavaScript 能读取到页面的 Cookie，而用户的登录信息通常也存在 Cookie 中，有安全隐患，这是因为在 HTML 页面允许引入第三方的 JavaScript 代码。为了解决这个问题，服务器在设置 Cookie 时可以使用 httpOnly，设定了 httpOnly 的 Cookie 将不能被 JavaScript 读取。这个行为由浏览器实现，主流浏览器均支持 httpOnly 选项，IE 从 IE6 SP1 开始支持。")]),t._v(" "),n("p",[t._v("为了确保安全，服务器端在设置 Cookie 时，应该始终坚持使用 httpOnly。")]),t._v(" "),n("p",[t._v("很多与 HTML 文档相关的属性，且都是数组形式的。")]),t._v(" "),n("ul",[n("li",[t._v("forms 数组")]),t._v(" "),n("li",[t._v("images 数组")]),t._v(" "),n("li",[t._v("links 数组")])])])}),[],!1,null,null,null);a.default=s.exports}}]);