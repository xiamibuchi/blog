(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{334:function(t,s,a){"use strict";a.r(s);var e=a(9),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"php"}},[t._v("php")]),t._v(" "),a("p",[t._v('** PHP，即"'),a("em",[t._v("PHP: Hypertext   Preprocessor")]),t._v('"，是一种被广泛应用的开源通用脚本语言，尤其适用于 Web 开发并可嵌入 HTML    中去。**')]),t._v(" "),a("ul",[a("li",[t._v("服务端脚本。这是 PHP 最传统，也是最主要的目标领域。开展这项工作需要具备以下三点：PHP 解析器（CGI 或者服务器模块）、web 服务器和 web 浏览器。需要在运行 web 服务器时，安装并配置 PHP，然后，可以用 web 浏览器来访问 PHP 程序的输出，即浏览服务端的 PHP 页面。如果只是实验 PHP 编程，所有的这些都可以运行在自己家里的电脑中。请查阅"),a("router-link",{attrs:{to:"mk:msitstore/:E\\study\\php\\php_enhanced_zh.chm::/res/install.html"}},[t._v("安装")]),t._v("一章以获取更多信息。")],1),t._v(" "),a("li",[t._v("命令行脚本。可以编写一段 PHP  脚本，并且不需要任何服务器或者浏览器来运行它。通过这种方式，仅仅只需要        PHP 解析器来执行。这种用法对于依赖  cron（Unix 或者 Linux 环境）或者 Task Scheduler（Windows 环境）的日常运行的脚本来说是理想的选择。这些脚本也可以用来处理简单的文本。请参阅 "),a("router-link",{attrs:{to:"mk:msitstore/:E\\study\\php\\php_enhanced_zh.chm::/res/features.commandline.html"}},[t._v("PHP 的命令行模式")]),t._v("以获取更多信息。")],1),t._v(" "),a("li",[t._v("编写桌面应用程序。对于有着图形界面的桌面应用程序来说，PHP  或许不是一种最好的语言，但是如果用户非常精通  PHP，并且希望在客户端应用程序中使用 PHP 的一些高级特性，可以利用 PHP-GTK 来编写这些程序。用这种方法，还可以编写跨平台的应用程序。PHP-GTK 是 PHP 的一个扩展，在通常发布的 PHP 包中并不包含它。如果对 PHP-GTK 感兴趣，请访问其"),a("a",{attrs:{href:"http://gtk.php.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("» 网站"),a("OutboundLink")],1),t._v("以获取更多信息。")])]),t._v(" "),a("p",[t._v("关于换行:"),a("em",[t._v("尽管换行在 HTML 中的实际意义不是很大，但适当地使用换行可以使 HTML 代码易读且美观。PHP 会在输出时自动删除其结束符 ?> 后的一个换行。该功能主要是针对在一个页面中嵌入多段 PHP 代码或者包含了无实质性输出的 PHP 文件而设计，与此同时也造成了一些疑惑。如果需要在 PHP 结束符 ?> 之后输出换行的话，可以在其后加一个空格，或者在最后的一个 echo/print 语句中加入一个换行。")])]),t._v(" "),a("h2",{attrs:{id:"基本语法"}},[t._v("基本语法")]),t._v(" "),a("p",[t._v("当解析一个文件时，PHP 会寻找起始和结束标记，也就是 "),a("code",[t._v("<?php 和 ?>")]),t._v("，这告诉 PHP 开始和停止解析二者之间的代码")]),t._v(" "),a("p",[t._v("如果文件内容是纯 PHP 代码，最好在文件末尾删除 PHP 结束标记。这可以避免在 PHP 结束标记之后万一意外加入了空格或者换行符，会导致 PHP 开始输出这些空白，而脚本中此时并无输出的意图。")]),t._v(" "),a("h3",{attrs:{id:"从-html-中分离"}},[t._v("从 HTML 中分离")]),t._v(" "),a("h4",{attrs:{id:"example-1-使用条件的高级分离术"}},[t._v("Example #1 使用条件的高级分离术")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$expression")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean constant"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n  This will show if the expression is true.\n"),a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n  Otherwise this will show.\n"),a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])]),a("p",[t._v("上例中 PHP 将跳过条件语句未达成的段落，即使该段落位于 PHP 开始和结束标记之外。由于 PHP 解释器会在条件未达成时直接跳过该段条件语句块，因此 PHP 会根据条件来忽略之。")]),t._v(" "),a("p",[t._v("要输出大段文本时，跳出 PHP 解析模式通常比将文本通过 echo 或 print 输出更有效率。")]),t._v(" "),a("p",[t._v("可以在 PHP 中使用四对不同的开始和结束标记。其中两种，"),a("code",[t._v("<?php ?>")]),t._v(" 和 "),a("code",[t._v('<script language="php"> <\/script>')]),t._v(" 总是可用的。另两种是短标记和 ASP 风格标记，可以在 php.ini 配置文件中打开或关闭。尽管有些人觉得短标记和 ASP 风格标记很方便，但移植性较差，通常不推荐使用。")]),t._v(" "),a("p",[t._v("Note: "),a("em",[t._v("此外注意如果将 PHP 嵌入到 XML 或 XHTML 中则需要使用 "),a("code",[t._v("<?php ?>")]),t._v(" 标记以保持符合标准。")])]),t._v(" "),a("h4",{attrs:{id:"example-2-php-开始和结束标记"}},[t._v("Example #2 PHP 开始和结束标记")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[t._v("//1.\n"),a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'if you want to serve XHTML or XML documents, do it like this'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n\n//2.\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("language")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("php"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    echo "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some editors (like FrontPage) don\\'t like processing instructions'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n//3.\n"),a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'this is the simplest, an SGML processing instruction'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?=")]),t._v(" expression "),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v(' This is a shortcut for "'),a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" expression "),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v('"\n\n//4.\n<% echo \'You may optionally use ASP-style tags\'; %>\n<%= $variable; # This is a shortcut for "<% echo . . ." %>\n')])])]),a("p",[t._v("上例中的 1 和 2 中使用的标记总是可用的，其中示例 1 中是最常用，并建议使用的。")]),t._v(" "),a("p",[t._v("短标记（上例 3）仅在通过 php.ini 配置文件中的指令 short_open_tag 打开后才可用，或者在 PHP 编译时加入了 --enable-short-tags 选项。")]),t._v(" "),a("p",[t._v("ASP 风格标记（上例 4）仅在通过 php.ini 配置文件中的指令 asp_tags 打开后才可用。")]),t._v(" "),a("p",[t._v("Note:"),a("em",[t._v("在以下情况应避免使用短标记：开发需要再次发布的程序或者库，或者在用户不能控制的服务器上开发。因为目标服务器可能不支持短标记。为了代码的移植及发行，确保不要使用短标记。")])]),t._v(" "),a("p",[t._v("Note: 在 PHP 5.2 和之前的版本中，解释器不允许一个文件的全部内容就是一个开始标记 <?php。自 PHP 5.3 起则允许此种文件，但要开始标记后有一个或更多白空格符。")]),t._v(" "),a("p",[t._v("Note: 自 PHP 5.4 起，短格式的 echo 标记 <?= 总会被识别并且合法，而不管 short_open_tag 的设置是什么。")]),t._v(" "),a("h4",{attrs:{id:"指令分隔符"}},[t._v("指令分隔符")]),t._v(" "),a("p",[t._v("PHP 需要在每个语句后用分号结束指令")]),t._v(" "),a("h4",{attrs:{id:"注释"}},[t._v("注释")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//单行注释")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    多行注释\n*/")]),t._v("\n")])])]),a("h4",{attrs:{id:"引入文件"}},[t._v("引入文件")]),t._v(" "),a("p",[t._v('include "";')]),t._v(" "),a("p",[t._v('require \'"";')]),t._v(" "),a("p",[t._v("require一个文件存在错误的话，那么程序就会中断执行了，并显示致命错误\ninclude一个文件存在错误的话，那么程序不会中端，而是继续执行，并显示一个警告错误。")]),t._v(" "),a("p",[t._v("include有返回值，而require没有。")]),t._v(" "),a("p",[t._v("有的文件不允许被包含多次?可以用_once来控制,")]),t._v(" "),a("h2",{attrs:{id:"变量"}},[t._v("变量")]),t._v(" "),a("h3",{attrs:{id:"可变变量"}},[t._v("可变变量")]),t._v(" "),a("p",[t._v("一个变量的值是一个变量的名")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$hello")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"world')]),t._v("\n")])])]),a("h3",{attrs:{id:"超全局变量"}},[t._v("超全局变量")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("$_GET")]),t._v(" //获取地址栏传值")]),t._v(" "),a("li",[a("code",[t._v("$_POST")]),t._v("//获取表单method=post传值")]),t._v(" "),a("li",[a("code",[t._v("$_COOKIE")]),t._v(" //会话的一种，将信息保存在客户端")]),t._v(" "),a("li",[a("code",[t._v("$_SESSION")]),t._v(" //会话的一种，将信息保存在服务器端")]),t._v(" "),a("li",[a("code",[t._v("$_FILE")]),t._v(" // 获取上传文件的相关信息")])]),t._v(" "),a("h2",{attrs:{id:"数据类型"}},[t._v("数据类型")]),t._v(" "),a("p",[t._v("PHP 支持 9 种原始数据类型。")]),t._v(" "),a("p",[t._v("四种标量类型：\n• boolean（布尔型）\n• integer（整型）\n• float（浮点型，也称作 double)\n• string（字符串）")]),t._v(" "),a("p",[t._v("三种复合类型：\n• array（数组）\n• object（对象）\n• callable（可调用）")]),t._v(" "),a("p",[t._v("最后是两种特殊类型：\n• resource（资源）\n• NULL（无类型）")]),t._v(" "),a("p",[t._v("Note: "),a("em",[t._v("如果想查看某个表达式的值和类型，用 var_dump() 函数。如果只是想得到一个易读懂的类型的表达方式用于调试，用 gettype() 函数。要检验某个类型，不要用 gettype()，而用 is_type 函数。如果要将一个变量强制转换为某类型，可以对其使用强制转换或者 settype() 函数。")])]),t._v(" "),a("p",[t._v("常量：常量不允许重复定义\nDefine(key,value);\nConst key=value;")]),t._v(" "),a("p",[t._v("扩展：错误抑制符@")]),t._v(" "),a("p",[t._v('isset(变量)：变量是否设置\nempty()：变量是否为空（0，"0",）')]),t._v(" "),a("h3",{attrs:{id:"boolean-布尔类型"}},[t._v("Boolean 布尔类型")]),t._v(" "),a("p",[t._v("true 或 false(大小写不敏感)")]),t._v(" "),a("p",[t._v("要明确地将一个值转换成 boolean，用 (bool) 或者 (boolean) 来强制转换。但是很多情况下不需要用强制转换，因为当运算符，函数或者流程控制结构需要一个 boolean 参数时，该值会被自动转换。")]),t._v(" "),a("p",[t._v('当转换为 boolean 时，以下值被认为是 FALSE：\n• 布尔值 FALSE 本身\n• 整型值 0（零）\n• 浮点型值 0.0（零）\n•  空字符串，以及字符串 "0"\n• 不包括任何元素的数组\n•  特殊类型 NULL（包括尚未赋值的变量）\n•  从空标记生成的 SimpleXML 对象')]),t._v(" "),a("p",[t._v("所有其它值都被认为是 TRUE（包括任何资源 和 NAN）。")]),t._v(" "),a("h3",{attrs:{id:"integer-整型"}},[t._v("Integer 整型")]),t._v(" "),a("p",[t._v("整型值可以使用十进制，十六进制，八进制或二进制表示，前面可以加上可选的符号（- 或者 +）。")]),t._v(" "),a("p",[t._v("要使用八进制表达，数字前必须加上 0（零）。要使用十六进制表达，数字前必须加上 0x。要使用二进制表达，数字前必须加上 0b。")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 十进制数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 负数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 八进制数 (等于十进制 83)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x1A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 十六进制数 (等于十进制 26)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("b11111111"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 二进制数字 (等于十进制 255)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])]),a("ol",[a("li",[t._v("转换为整型：要明确地将一个值转换为 integer，用 (int) 或 (integer) 强制转换。不过大多数情况下都不需要强制转换，因为当运算符，函数或流程控制需要一个 integer 参数时，值会自动转换。还可以通过函数 intval() 来将一个值转换成整型。")]),t._v(" "),a("li",[t._v("将 resource 转换成 integer 时， 结果会是 PHP 运行时为 resource 分配的唯一资源号。")]),t._v(" "),a("li",[t._v("从浮点型转换:当从浮点数转换成整数时，将向下取整。")])]),t._v(" "),a("p",[t._v("Note: PHP 7.0.0 起，NaN 和 Infinity 在转换成 integer 时，不再是 undefined 或者依赖于平台，而是都会变成零。")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("int"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显示 7!")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])]),a("h3",{attrs:{id:"float-浮点型"}},[t._v("Float 浮点型")]),t._v(" "),a("p",[t._v("浮点数的精度:浮点数的精度有限。尽管取决于系统，PHP 通常使用 IEEE 754 双精度格式，则由于取整而导致的最大相对误差为 1.11e-16。非基本数学运算可能会给出更大误差，并且要考虑到进行复合运算时的误差传递。")]),t._v(" "),a("p",[t._v("比较浮点数")]),t._v(" "),a("p",[t._v("如上述警告信息所言，由于内部表达方式的原因，比较两个浮点数是否相等是有问题的。不过还是有迂回的方法来比较浮点数值的。")]),t._v(" "),a("p",[t._v("要测试浮点数是否相等，要使用一个仅比该数值大一丁点的最小误差值。该值也被称为机器极小值（epsilon）或最小单元取整数，是计算中所能接受的最小的差别值。")]),t._v(" "),a("p",[t._v("$a 和 $b 在小数点后五位精度内都是相等的。")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.23456789")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.23456780")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$epsilon")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("abs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$epsilon")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"true"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])]),a("h3",{attrs:{id:"string-字符串"}},[t._v("String 字符串")]),t._v(" "),a("h4",{attrs:{id:"单引号"}},[t._v("单引号")]),t._v(" "),a("p",[t._v("要表达一个单引号自身，需在它的前面加个反斜线（\\）来转义。要表达一个反斜线自身，则用两个反斜线（\\）。其它任何方式的反斜线都会被当成反斜线本身：也就是说如果想使用其它转义序列例如 \\r 或者 \\n，并不代表任何特殊含义，就单纯是这两个字符本身。")]),t._v(" "),a("p",[t._v("Note: "),a("em",[t._v("不像双引号和 heredoc 语法结构，在单引号字符串中的变量和特殊字符的转义序列将不会被替换。")])]),t._v(" "),a("h4",{attrs:{id:"双引号"}},[t._v("双引号")]),t._v(" "),a("p",[t._v('如果字符串是包围在双引号（"）中， PHP 将对一些特殊的字符进行解析：')]),t._v(" "),a("p",[t._v('序列                     含义\n\\n            换行（ASCII 字符集中的 LF 或 0x0A (10)）\n\\r            回车（ASCII 字符集中的 CR 或 0x0D (13)）\n\\t            水平制表符（ASCII 字符集中的 HT 或 0x09 (9)）\n\\v            垂直制表符（ASCII 字符集中的 VT 或 0x0B (11)）（自 PHP 5.2.5 起）\n\\e            Escape（ASCII 字符集中的 ESC 或 0x1B (27)）（自 PHP 5.4.0 起）\n\\f            换页（ASCII 字符集中的 FF 或 0x0C (12)）（自 PHP 5.2.5 起）\n\\            反斜线\n$            美元标记\n"            双引号\n[0-7]{1,3}   符合该正则表达式序列的是一个以八进制方式来表达的字符\n\\x[0-9A-Fa-f] {1,2} 符合该正则表达式序列的是一个以十六进制方式来表达的字符')]),t._v(" "),a("h4",{attrs:{id:"heredoc-结构"}},[t._v("Heredoc 结构(<<<)")]),t._v(" "),a("p",[t._v("第三种表达字符串的方法是用 heredoc 句法结构：<<<。在该运算符之后要提供一个标识符，然后换行。接下来是字符串 string 本身，最后要用前面定义的标识符作为结束标志。")]),t._v(" "),a("p",[t._v("Heredoc 结构就象是没有使用双引号的双引号字符串，这就是说在 heredoc 结构中单引号不用被转义，但是上文中列出的转义序列还可以使用。变量将被替换，但在 heredoc 结构中含有复杂的变量时要格外小心。")]),t._v(" "),a("p",[t._v("要注意的是结束标识符这行除了可能有一个分号（;）外，绝对不能包含其它字符。这意味着标识符不能缩进，分号的前后也不能有任何空白或制表符。更重要的是结束标识符的前面必须是个被本地操作系统认可的换行，比如在 UNIX 和 Mac OS X 系统中是 \\n，而结束定界符（可能其后有个分号）之后也必须紧跟一个换行。")]),t._v(" "),a("p",[t._v('如果不遵守该规则导致结束标识不"干净"，PHP 将认为它不是结束标识符而继续寻找。如果在文件结束前也没有找到一个正确的结束标识符，PHP 将会在最后一行产生一个解析错误。')]),t._v(" "),a("h4",{attrs:{id:"复杂（花括号）语法"}},[t._v("复杂（花括号）语法")]),t._v(" "),a("p",[t._v("复杂语法不是因为其语法复杂而得名，而是因为它可以使用复杂的表达式。")]),t._v(" "),a("p",[t._v("任何具有 string 表达的标量变量，数组单元或对象属性都可使用此语法。只需简单地像在 string 以外的地方那样写出表达式，然后用花括号 { 和 } 把它括起来即可。由于 { 无法被转义，只有 $ 紧挨着 { 时才会被识别。可以用 {$ 来表达 {$。下面的示例可以更好的解释：")]),t._v(" "),a("p",[t._v("在双引号字符串中，使用{}将变量括起来可保证变量被顺利解析。")]),t._v(" "),a("h4",{attrs:{id:"nowdoc-结构"}},[t._v("Nowdoc 结构")]),t._v(" "),a("p",[t._v("可理解为Heredoc 结构(<<<)的不解析转义和变量版")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token nowdoc-string string"}},[a("span",{pre:!0,attrs:{class:"token delimiter symbol"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<<<'")]),t._v("EOD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v("\nExample of string\nspanning multiple lines\nusing nowdoc syntax.\n"),a("span",{pre:!0,attrs:{class:"token delimiter symbol"}},[t._v("EOD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),t._v("\n")])])]),a("h4",{attrs:{id:"方法"}},[t._v("方法")]),t._v(" "),a("ol",[a("li",[t._v("'.':连接字符串（'+'（加号）运算符没有这个功能）")]),t._v(" "),a("li",[t._v("str(index):下标访问字符串中的某个字符（要注意各字符编码占用的长度，用 [] 或 {} 访问任何其它类型（不包括数组或具有相应接口的对象实现）的变量只会无声地返回 NULL。 ）")]),t._v(" "),a("li",[t._v("(string) 或用 strval():转换为字符串\n"),a("ol",[a("li",[t._v('boolean 的 TRUE 被转换成 string 的 "1"。Boolean 的 FALSE 被转换成 ""（空字符串）。')]),t._v(" "),a("li",[t._v("一个整数 integer 或浮点数 float 被转换为数字的字面样式的 string（包括 float 中的指数部分）。使用指数计数法的浮点数（4.1E+6）也可转换。")]),t._v(" "),a("li",[t._v("数组 array 总是转换成字符串 \"Array\"，因此，echo 和 print 无法显示出该数组的内容。要显示某个单元，可以用 echo $arr['foo'] 这种结构")]),t._v(" "),a("li",[t._v("NULL 总是被转变成空字符串")]),t._v(" "),a("li",[t._v('资源 resource 总会被转变成 "Resource id #1"  这种结构的字符串')])])])]),t._v(" "),a("p",[t._v("某些函数假定字符串是以单字节编码的:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("substr(string $string , int $start [, int $length ]): start 是负数，返回的字符串将从 string 结尾处向前数第 start 个字符开始。如果 string 的长度小于 start，将返回 FALSE。")])]),t._v(" "),a("li",[a("p",[t._v("mb_substr(string $str , int $start [, int $length = NULL [, string $encoding = mb_internal_encoding()]]);")]),t._v(" "),a("ul",[a("li",[t._v("$string  从哪个字符串中截取")]),t._v(" "),a("li",[t._v("$start   从字符串哪个地方开始截")]),t._v(" "),a("li",[t._v("$length  截取多长，---如果没有这个参数，会从开始截取的地方一直截取到最后")]),t._v(" "),a("li",[t._v("$encoding  当前的编码（文件编码）")])])]),t._v(" "),a("li",[a("p",[t._v("strpos(string $haystack , mixed $needle [, int $offset = 0 ]):字符串中查找某一段字符串")])]),t._v(" "),a("li",[a("p",[t._v("strrpos()：和strpos使用的方式一样，只不过返回的是最后一次出现的位置")])]),t._v(" "),a("li",[a("p",[t._v("strlen():获取字符串长度,如果 string 为空，则返回 0。")])]),t._v(" "),a("li",[a("p",[t._v("strcmp(string $str1 , string $str2):如果 str1 小于 str2 返回 < 0； 如果 str1 大于 str2 返回 > 0；如果两者相等，返回 0。")])]),t._v(" "),a("li",[a("p",[t._v("implode(string $glue , array $pieces)  数组转换成字符串")])]),t._v(" "),a("li",[a("p",[t._v("explode ( string $delimiter , string $string [, int $limit ] )")]),t._v(" "),a("ul",[a("li",[t._v("$delimiter 用什么字符来分割需要转换成数组的字符串")]),t._v(" "),a("li",[t._v("$string 需要转化成数组的字符串")])])]),t._v(" "),a("li",[a("p",[t._v("str_split(string $string [, int $split_length = 1 ]):字符串按照字符个数来转换成数组，如果最后一个元素不够指定的数目，也会当成一个数组元素")])]),t._v(" "),a("li",[a("p",[t._v("strtolower();strtoupper();ucfirst():把字符串中第一个字符转换成大写")])]),t._v(" "),a("li",[a("p",[t._v("str_replace ( mixed $search , mixed $replace , mixed $subject)")]),t._v(" "),a("ul",[a("li",[t._v("$search:被替换的字符串")]),t._v(" "),a("li",[t._v("$replace:用什么字符串替换")]),t._v(" "),a("li",[t._v("$subject:在哪个字符串中进行替换")])])]),t._v(" "),a("li",[a("p",[t._v("trim()---去掉左边和右边的空格及/n、/t等转义字符")])]),t._v(" "),a("li",[a("p",[t._v("ltrim()---去掉左边的空格及/n、/t等转义字符")])]),t._v(" "),a("li",[a("p",[t._v("rtrim()----去掉右边的空格及/n、/t等转义字符")])]),t._v(" "),a("li",[a("p",[t._v("str_repeat(string $input,int $multiplier);字符串重复")]),t._v(" "),a("ul",[a("li",[t._v("$string  被重复的字符串")]),t._v(" "),a("li",[t._v("$multiplier 重复的次数")])])]),t._v(" "),a("li",[a("p",[t._v("string str_shuffle ( string $str);$string  需要被打乱的字符串")])])]),t._v(" "),a("h4",{attrs:{id:"字符串转换为数值"}},[t._v("字符串转换为数值")]),t._v(" "),a("p",[t._v("当一个字符串被当作一个数值来取值，其结果和类型如下：")]),t._v(" "),a("p",[t._v("如果该字符串没有包含 '.'，'e' 或 'E' 并且其数字值在整型的范围之内（由 PHP_INT_MAX 所定义），该字符串将被当成 integer 来取值。其它所有情况下都被作为 float 来取值。")]),t._v(" "),a("p",[t._v("该字符串的开始部分决定了它的值。如果该字符串以合法的数值开始，则使用该数值。否则其值为 0（零）。合法数值由可选的正负号，后面跟着一个或多个数字（可能有小数点），再跟着可选的指数部分。指数部分由 'e' 或 'E' 后面跟着一个或多个数字构成。")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"10.5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// $foo is float (11.5)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"-1.3e3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// $foo is float (-1299)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"bob-1.3e3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// $foo is integer (1)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"bob3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// $foo is integer (1)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"10 Small Pigs"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// $foo is integer (11)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"10.2 Little Piggies"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// $foo is float (14.2)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"10.0 pigs "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// $foo is float (11)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"10.0 pigs "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// $foo is float (11)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])]),a("h3",{attrs:{id:"array-数组"}},[t._v("Array 数组")]),t._v(" "),a("p",[t._v("PHP 中的数组实际上是一个有序映射。映射是一种把 values 关联到 keys 的类型。")]),t._v(" "),a("p",[t._v("关联数组:就是下标是字符串的数组\n枚举数组索引数组:就是下标是数字的数组")]),t._v(" "),a("p",[t._v("PHP 数组可以同时含有 integer 和 string 类型的键名，因为 PHP 实际并不区分索引数组和关联数组。")]),t._v(" "),a("h4",{attrs:{id:"定义"}},[t._v("定义")]),t._v(" "),a("ol",[a("li",[t._v("array()：它接受任意数量用逗号分隔的 键（key） => 值（value）对。\n"),a("ul",[a("li",[t._v("// 键（key）可是是一个整数 integer 或字符串 string")]),t._v(" "),a("li",[t._v("// 值（value）可以是任意类型的值")])])]),t._v(" "),a("li",[t._v("[]")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"foo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"bar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"bar"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自 PHP 5.4 起")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"foo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"bar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"bar"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"foo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])]),a("p",[t._v("key 会有如下的强制转换：")]),t._v(" "),a("p",[t._v('•  包含有合法整型值的字符串会被转换为整型。例如键名 "8" 实际会被储存为 8。但是 "08" 则不会强制转换，因为其不是一个合法的十进制数值。\n•  浮点数也会被转换为整型，意味着其小数部分会被舍去。例如键名 8.7 实际会被储存为 8。\n•  布尔值也会被转换成整型。即键名 true 实际会被储存为 1 而键名 false 会被储存为 0。\n• Null 会被转换为空字符串，即键名 null 实际会被储存为 ""。\n•  数组和对象不能被用为键名。坚持这么做会导致警告：Illegal offset type。')]),t._v(" "),a("p",[t._v("如果在数组定义中多个单元都使用了同一个键名，则只使用了最后一个，之前的都被覆盖了。")]),t._v(" "),a("p",[t._v("如果不给键名，则默认1，2，3，4，5，...")]),t._v(" "),a("p",[t._v("数组单元可以通过 array[key] 语法来访问")]),t._v(" "),a("p",[t._v("数组元素的顺序以放入顺序为准，跟下标无关")]),t._v(" "),a("h4",{attrs:{id:"数组方法"}},[t._v("数组方法")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$key")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如不需要循环下标")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//遍历数组的第三种方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$val")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("each")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("':'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$val")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token double-quoted-string string"}},[t._v('"<br>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("$key")]),t._v("代表当前元素的下标\n"),a("code",[t._v("$value")]),t._v("代表当前元素的值")]),t._v(" "),a("p",[t._v("指针函数，比如：\nreset(), ---------移动指针到第一个元素\nend(), -------移动指针到最后一个元素")]),t._v(" "),a("p",[t._v("key()-----------指针指向的当前元素的下标\ncurrent(), ----指针指向的当前元素的值")]),t._v(" "),a("p",[t._v("sort(),  ----从低到高来排序\nrsort(), ----从高到底排序")]),t._v(" "),a("p",[t._v("asort(), 保持索引关系正向排序\narsort(), 保持索引关系逆向排序")]),t._v(" "),a("p",[t._v("ksort(), 按照下标来正向排序\nkrsort(), 按照下标逆向排序")]),t._v(" "),a("p",[t._v("shuffle()  打乱数组的元素顺序，这里是随机打乱的")]),t._v(" "),a("p",[t._v("count()  ---返回数组中元素的个数\narray_push() ----想数组中追加元素，可以同时追加多个元素\narray_pop(),-----删除数组中最后一个加入的元素")]),t._v(" "),a("p",[t._v("array_reverse()----反转数组\nin_array(), ----判断数组中是否包含某个值\narray_keys(),----返回数组中所有的下标\narray_values()-----返回数组中所有的值")]),t._v(" "),a("h2",{attrs:{id:"数据库操作"}},[t._v("数据库操作")]),t._v(" "),a("h3",{attrs:{id:"连接数据库"}},[t._v("连接数据库")]),t._v(" "),a("ol",[a("li",[t._v("创建连接接口：$conn = mysqli_connect('请求地址','用户名','用户密码','数据库名');")]),t._v(" "),a("li",[t._v("执行语句："),a("code",[t._v("mysqli_query($conn,$sql语句);")]),t._v(" "),a("ol",[a("li",[t._v("查询语句（SELECT）会返回一个阅读器或者false")]),t._v(" "),a("li",[t._v("其他语句如 delete，insert into，update等会根据执行结果返回true或false")])])]),t._v(" "),a("li",[t._v("如果获得的是阅读器"),a("code",[t._v("$reader")]),t._v("，则根据需求的数据，使用\n"),a("ol",[a("li",[t._v("mysqli_fetch_row：返回索引数组")]),t._v(" "),a("li",[t._v("mysqli_fetch_assoc：返回关联数组")])])]),t._v(" "),a("li",[t._v("获取数据完毕，关闭阅读器："),a("code",[t._v("mysqli_free_request($reader)")])]),t._v(" "),a("li",[t._v("关闭连接数据："),a("code",[t._v("mysqli_close($conn)")])])]),t._v(" "),a("h3",{attrs:{id:"操作数据库"}},[t._v("操作数据库")]),t._v(" "),a("p",[t._v("// 基本的 sql 语句")]),t._v(" "),a("p",[t._v("// 增加\n// INSERT INTO 表名 ( 列名, 列名, ... ) VALUES ( 值, 值, ... );\n// 不好的习惯: INSERT 表名 VALUES ( 值, 值, ... );")]),t._v(" "),a("p",[t._v("// 删除\n// DELETE FROM 表名 WHERE 条件")]),t._v(" "),a("p",[t._v("// 修改\n// UPDATE 表名 SET 列 = 值, 列 = 值, ... WHERE 条件")]),t._v(" "),a("p",[t._v("// 看文档的时候, 文档描述语法\n// UPDATE 表名 SET 列=值[, 列=值] ...\n// UPDATE 表名 SET {列=值} , ...")]),t._v(" "),a("p",[t._v("// 查询\n// SELECT 列[, 列] ... FROM 表名 WHERE 条件")]),t._v(" "),a("p",[t._v("// SELECT { 列[, 列] ... | * } FROM 表名 WHERE 条件")]),t._v(" "),a("p",[t._v("// ORDER BY 列名 DESC")]),t._v(" "),a("p",[t._v("// LIMIT offset, count")]),t._v(" "),a("h2",{attrs:{id:"header"}},[t._v("header")]),t._v(" "),a("h3",{attrs:{id:"content-type"}},[t._v("content-type")]),t._v(" "),a("p",[t._v("根据content-type : jquery 的 ajax 可以根据返回的数据正确的识别数据类型")]),t._v(" "),a("p",[t._v("//定义编码"),a("br"),t._v("\nheader( 'Content-Type:text/html;charset=utf-8 ');")]),t._v(" "),a("p",[t._v("//Atom"),a("br"),t._v("\nheader('Content-type: application/atom+xml');")]),t._v(" "),a("p",[t._v("//CSS"),a("br"),t._v("\nheader('Content-type: text/css');")]),t._v(" "),a("p",[t._v("//Javascript"),a("br"),t._v("\nheader('Content-type: text/javascript');")]),t._v(" "),a("p",[t._v("//JPEG Image"),a("br"),t._v("\nheader('Content-type: image/jpeg');")]),t._v(" "),a("p",[t._v("//JSON"),a("br"),t._v("\nheader('Content-type: application/json');")]),t._v(" "),a("p",[t._v("//PDF"),a("br"),t._v("\nheader('Content-type: application/pdf');")]),t._v(" "),a("p",[t._v("//RSS"),a("br"),t._v("\nheader('Content-Type: application/rss+xml; charset=ISO-8859-1');")]),t._v(" "),a("p",[t._v("//Text (Plain)"),a("br"),t._v("\nheader('Content-type: text/plain');")]),t._v(" "),a("p",[t._v("//XML"),a("br"),t._v("\nheader('Content-type: text/xml');")]),t._v(" "),a("p",[t._v("// ok"),a("br"),t._v("\nheader('HTTP/1.1 200 OK');")]),t._v(" "),a("p",[t._v("//设置一个404头:"),a("br"),t._v("\nheader('HTTP/1.1 404 Not Found');")]),t._v(" "),a("p",[t._v("//设置地址被永久的重定向"),a("br"),t._v("\nheader('HTTP/1.1 301 Moved Permanently');")]),t._v(" "),a("p",[t._v("//转到一个新地址"),a("br"),t._v("\nheader('Location: http://www.example.org/');")]),t._v(" "),a("p",[t._v("//文件延迟转向:"),a("br"),t._v("\nheader('Refresh: 10; url=http://www.example.org/');"),a("br"),t._v("\nprint 'You will be redirected in 10 seconds';")]),t._v(" "),a("p",[t._v("//当然，也可以使用html语法实现"),a("br"),t._v('\n// <meta http-equiv="refresh" content="10;http://www.example.org/ />')]),t._v(" "),a("p",[t._v("// override X-Powered-By: PHP:"),a("br"),t._v("\nheader('X-Powered-By: PHP/4.4.0');"),a("br"),t._v("\nheader('X-Powered-By: Brain/0.6b');")]),t._v(" "),a("p",[t._v("//文档语言"),a("br"),t._v("\nheader('Content-language: en');")]),t._v(" "),a("p",[t._v("//告诉浏览器最后一次修改时间"),a("br"),t._v("\n$time = time() - 60; // or filemtime($fn), etc"),a("br"),t._v("\nheader('Last-Modified: '.gmdate('D, d M Y H:i:s', $time).' GMT');")]),t._v(" "),a("p",[t._v("//告诉浏览器文档内容没有发生改变"),a("br"),t._v("\nheader('HTTP/1.1 304 Not Modified');")]),t._v(" "),a("p",[t._v("//设置内容长度"),a("br"),t._v("\nheader('Content-Length: 1234');")]),t._v(" "),a("p",[t._v("//设置为一个下载类型"),a("br"),t._v("\nheader('Content-Type: application/octet-stream');"),a("br"),t._v("\nheader('Content-Disposition: attachment; filename=\"example.zip\"');"),a("br"),t._v("\nheader('Content-Transfer-Encoding: binary');"),a("br"),t._v("\n// load the file to send:"),a("br"),t._v("\nreadfile('example.zip');")]),t._v(" "),a("p",[t._v("// 对当前文档禁用缓存"),a("br"),t._v("\nheader('Cache-Control: no-cache, no-store, max-age=0, must-revalidate');"),a("br"),t._v("\nheader('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past"),a("br"),t._v("\nheader('Pragma: no-cache');")]),t._v(" "),a("p",[t._v("//设置内容类型:"),a("br"),t._v("\nheader('Content-Type: text/html; charset=iso-8859-1');"),a("br"),t._v("\nheader('Content-Type: text/html; charset=utf-8');"),a("br"),t._v("\nheader('Content-Type: text/plain'); //纯文本格式"),a("br"),t._v("\nheader('Content-Type: image/jpeg'); //JPG***"),a("br"),t._v("\nheader('Content-Type: application/zip'); // ZIP文件"),a("br"),t._v("\nheader('Content-Type: application/pdf'); // PDF文件"),a("br"),t._v("\nheader('Content-Type: audio/mpeg'); // 音频文件"),a("br"),t._v("\nheader('Content-Type: application/x-shockw**e-flash'); //Flash动画")]),t._v(" "),a("p",[t._v("//显示登陆对话框"),a("br"),t._v("\nheader('HTTP/1.1 401 Unauthorized');"),a("br"),t._v("\nheader('WWW-Authenticate: Basic realm=\"Top Secret\"');"),a("br"),t._v("\nprint 'Text that will be displayed if the user hits cancel or ';"),a("br"),t._v("\nprint 'enters wrong login data';")])])}),[],!1,null,null,null);s.default=n.exports}}]);